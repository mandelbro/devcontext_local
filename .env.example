# DevContext Environment Configuration Example
# Copy this file to .env and fill in your values

# ============================================
# DATABASE CONFIGURATION
# ============================================

# Database mode selection (required)
# Options: 'turso' (cloud database) or 'local' (SQLite file)
# Default: 'turso' (for backward compatibility)
DATABASE_MODE=local

# --------------------------------------------
# Option A: Local SQLite Configuration
# --------------------------------------------
# Use this when DATABASE_MODE=local
# Path to local SQLite database file
# Default: './devcontext.db'
# The database file will be created automatically if it doesn't exist
LOCAL_SQLITE_PATH=./devcontext.db

# --------------------------------------------
# Option B: Turso Cloud Configuration
# --------------------------------------------
# Use these when DATABASE_MODE=turso
# Get these values from https://turso.tech after creating a database
# Required only when using DATABASE_MODE=turso
TURSO_DATABASE_URL=libsql://your-database-name.turso.io
TURSO_AUTH_TOKEN=your-turso-auth-token-here

# ============================================
# LOGGING CONFIGURATION
# ============================================

# Log level for application logging
# Options: 'debug', 'info', 'warn', 'error'
# Default: 'info'
LOG_LEVEL=info

# ============================================
# INDEXING CONFIGURATION
# ============================================

# Maximum size for text files to be indexed (in MB)
# Files larger than this will be skipped during indexing
# Default: 5
MAX_TEXT_FILE_SIZE_MB=5

# Languages to parse with Tree-sitter for enhanced code understanding
# Comma-separated list of language names
# Default: 'javascript,python,typescript'
# Available options: javascript, typescript, python, java, c, cpp, go, rust, ruby, php
TREE_SITTER_LANGUAGES=javascript,python,typescript

# ============================================
# AI CONFIGURATION (Google Gemini)
# ============================================

# Google Gemini API key for AI-powered features
# Get your API key from: https://makersuite.google.com/app/apikey
# Optional: AI features will be disabled if not provided
GOOGLE_GEMINI_API_KEY=

# AI model to use for processing
# Default: 'gemini-2.5-flash-preview-05-20'
AI_MODEL_NAME=gemini-2.5-flash-preview-05-20

# Token budget for AI thinking/reasoning
# Default: 1000
AI_THINKING_BUDGET=1000

# ============================================
# AI JOB PROCESSING CONFIGURATION
# ============================================

# Number of concurrent AI jobs to process
# Default: 2
AI_JOB_CONCURRENCY=2

# Delay between AI job processing (in milliseconds)
# Default: 500
AI_JOB_DELAY_MS=500

# Maximum attempts for failed AI jobs
# Default: 3
MAX_AI_JOB_ATTEMPTS=3

# Polling interval for AI job queue (in milliseconds)
# Default: 5000
AI_JOB_POLLING_INTERVAL_MS=5000

# ============================================
# CONTEXT RETRIEVAL CONFIGURATION
# ============================================

# Maximum number of seed entities to expand during context retrieval
# Default: 3
MAX_SEED_ENTITIES_FOR_EXPANSION=3

# ============================================
# EXAMPLE CONFIGURATIONS
# ============================================

# Example 1: Local SQLite setup (recommended for getting started)
# DATABASE_MODE=local
# LOCAL_SQLITE_PATH=./my-project.db
# LOG_LEVEL=info

# Example 2: Turso cloud setup (for production or team collaboration)
# DATABASE_MODE=turso
# TURSO_DATABASE_URL=libsql://my-project-db.turso.io
# TURSO_AUTH_TOKEN=eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9...

# Example 3: Development setup with debug logging
# DATABASE_MODE=local
# LOCAL_SQLITE_PATH=./dev-context.db
# LOG_LEVEL=debug
# MAX_TEXT_FILE_SIZE_MB=10

# ============================================
# NOTES
# ============================================
# - DATABASE_MODE must be set to either 'turso' or 'local'
# - When using 'local' mode, TURSO_* variables are ignored
# - When using 'turso' mode, LOCAL_SQLITE_PATH is ignored
# - Local SQLite databases are created automatically if they don't exist
# - For production use, consider using Turso for better performance and collaboration
